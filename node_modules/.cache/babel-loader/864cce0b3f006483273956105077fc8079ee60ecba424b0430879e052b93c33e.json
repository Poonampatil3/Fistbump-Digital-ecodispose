{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patil\\\\Desktop\\\\fistbump2-main\\\\src\\\\components\\\\CameraInput\\\\CameraInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect, useCallback } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useNavigate } from 'react-router-dom';\nimport './CameraInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GEMINI_API_KEY = 'AIzaSyAvWsTj69wj-K7UTqrDURml48kklsdR0-k';\nconst GEMINI_API_URL = 'https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent';\nconst CameraInput = ({\n  onImageCapture,\n  onImageUpload\n}) => {\n  _s();\n  const fileInputRef = useRef(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const navigate = useNavigate();\n  const [stream, setStream] = useState(null);\n  const [isCameraActive, setIsCameraActive] = useState(false);\n  const [previewImage, setPreviewImage] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [cameraError, setCameraError] = useState(null);\n  const [isCapturing, setIsCapturing] = useState(false);\n  const [videoReady, setVideoReady] = useState(false);\n  const [cameraStarted, setCameraStarted] = useState(false);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  useEffect(() => {\n    return () => {\n      if (stream) {\n        stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [stream]);\n\n  // Video stream management same as previous code...\n\n  const analyzeImageWithGemini = async imageData => {\n    try {\n      setIsAnalyzing(true);\n      const base64String = imageData.split(',')[1] || imageData;\n      const response = await fetch(GEMINI_API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${GEMINI_API_KEY}`\n        },\n        body: JSON.stringify({\n          contents: [{\n            parts: [{\n              text: `Analyze this waste/recycling item image and provide detailed information in JSON format including name, material, category, disposal instructions, binColor, tips, and confidence.`\n            }, {\n              inline_data: {\n                mime_type: 'image/jpeg',\n                data: base64String\n              }\n            }]\n          }]\n        })\n      });\n      if (!response.ok) throw new Error(`API error: ${response.status}`);\n      const data = await response.json();\n      if (!data.candidates || !data.candidates[0] || !data.candidates[0].content) throw new Error('Invalid API response');\n      const textContent = data.candidates[0].content.parts[0].text;\n      const jsonMatch = textContent.match(/\\{[\\s\\S]*\\}/);\n      if (!jsonMatch) throw new Error('No JSON found in response');\n      const result = JSON.parse(jsonMatch[0]);\n      return result;\n    } catch (error) {\n      setCameraError('Gemini API error: ' + error.message);\n      throw error;\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n\n  // Capture image and navigate to results\n  const captureImage = useCallback(async () => {\n    if (videoRef.current && canvasRef.current && videoReady) {\n      const video = videoRef.current;\n      if (video.videoWidth === 0 || video.videoHeight === 0 || video.readyState < 2) {\n        setCameraError('Camera not ready. Please wait.');\n        return;\n      }\n      setIsCapturing(true);\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n      const imageSrc = canvas.toDataURL('image/jpeg', 0.9);\n      try {\n        const result = await analyzeImageWithGemini(imageSrc);\n        onImageCapture && onImageCapture(result);\n        navigate('/results', {\n          state: {\n            result\n          }\n        });\n        stopCamera();\n      } catch (error) {\n        setCameraError('Failed to analyze image: ' + error.message);\n      } finally {\n        setIsCapturing(false);\n      }\n    } else {\n      setCameraError('Camera not ready. Please wait.');\n    }\n  }, [videoReady, navigate]);\n\n  // Analyze uploaded preview image\n  const handleAnalyze = async () => {\n    if (previewImage) {\n      setIsAnalyzing(true);\n      try {\n        const result = await analyzeImageWithGemini(previewImage);\n        onImageUpload && onImageUpload(result);\n        navigate('/results', {\n          state: {\n            result\n          }\n        });\n        setPreviewImage(null);\n      } catch (error) {\n        setCameraError('Failed to analyze image: ' + error.message);\n      } finally {\n        setIsAnalyzing(false);\n      }\n    }\n  };\n\n  // Handlers for file upload, drag-drop, startCamera, stopCamera, etc. (unchanged)\n\n  // Reset preview and errors\n  const resetPreview = () => {\n    setPreviewImage(null);\n    setCameraError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"camera-input-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      mode: \"wait\",\n      children: [!isCameraActive && !previewImage && /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"camera-input-panel\",\n        initial: {\n          opacity: 0,\n          y: 20,\n          scale: 0.95\n        },\n        animate: {\n          opacity: 1,\n          y: 0,\n          scale: 1\n        },\n        exit: {\n          opacity: 0,\n          y: -20,\n          scale: 0.95\n        },\n        transition: {\n          type: \"spring\",\n          stiffness: 300,\n          damping: 30\n        }\n      }, \"input-panel\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), isCameraActive && /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"camera-view\",\n        initial: {\n          opacity: 0,\n          scale: 0.9\n        },\n        animate: {\n          opacity: 1,\n          scale: 1\n        },\n        exit: {\n          opacity: 0,\n          scale: 0.9\n        },\n        transition: {\n          type: \"spring\",\n          stiffness: 200,\n          damping: 25\n        }\n      }, \"camera-view\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), previewImage && /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"image-preview\",\n        initial: {\n          opacity: 0,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        exit: {\n          opacity: 0,\n          y: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: previewImage,\n          alt: \"Preview\",\n          className: \"preview-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preview-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: resetPreview,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: handleAnalyze,\n            disabled: isAnalyzing,\n            children: isAnalyzing ? 'Analyzing...' : 'Analyze'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, \"preview\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(CameraInput, \"j+QF3mnao9dRV+llCfgFGCq83EU=\", false, function () {\n  return [useNavigate];\n});\n_c = CameraInput;\nexport default CameraInput;\nvar _c;\n$RefreshReg$(_c, \"CameraInput\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useCallback","motion","AnimatePresence","useNavigate","jsxDEV","_jsxDEV","GEMINI_API_KEY","GEMINI_API_URL","CameraInput","onImageCapture","onImageUpload","_s","fileInputRef","videoRef","canvasRef","navigate","stream","setStream","isCameraActive","setIsCameraActive","previewImage","setPreviewImage","isDragging","setIsDragging","cameraError","setCameraError","isCapturing","setIsCapturing","videoReady","setVideoReady","cameraStarted","setCameraStarted","isAnalyzing","setIsAnalyzing","getTracks","forEach","track","stop","analyzeImageWithGemini","imageData","base64String","split","response","fetch","method","headers","Authorization","body","JSON","stringify","contents","parts","text","inline_data","mime_type","data","ok","Error","status","json","candidates","content","textContent","jsonMatch","match","result","parse","error","message","captureImage","current","video","videoWidth","videoHeight","readyState","canvas","ctx","getContext","width","height","drawImage","imageSrc","toDataURL","state","stopCamera","handleAnalyze","resetPreview","className","children","ref","style","display","fileName","_jsxFileName","lineNumber","columnNumber","mode","div","initial","opacity","y","scale","animate","exit","transition","type","stiffness","damping","src","alt","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/patil/Desktop/fistbump2-main/src/components/CameraInput/CameraInput.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect, useCallback } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useNavigate } from 'react-router-dom';\nimport './CameraInput.css';\n\nconst GEMINI_API_KEY = 'AIzaSyAvWsTj69wj-K7UTqrDURml48kklsdR0-k';\nconst GEMINI_API_URL = 'https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent';\n\nconst CameraInput = ({ onImageCapture, onImageUpload }) => {\n  const fileInputRef = useRef(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const navigate = useNavigate();\n\n  const [stream, setStream] = useState(null);\n  const [isCameraActive, setIsCameraActive] = useState(false);\n  const [previewImage, setPreviewImage] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [cameraError, setCameraError] = useState(null);\n  const [isCapturing, setIsCapturing] = useState(false);\n  const [videoReady, setVideoReady] = useState(false);\n  const [cameraStarted, setCameraStarted] = useState(false);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n\n  useEffect(() => {\n    return () => {\n      if (stream) {\n        stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [stream]);\n\n  // Video stream management same as previous code...\n\n  const analyzeImageWithGemini = async (imageData) => {\n    try {\n      setIsAnalyzing(true);\n      const base64String = imageData.split(',')[1] || imageData;\n      const response = await fetch(GEMINI_API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${GEMINI_API_KEY}`\n        },\n        body: JSON.stringify({\n          contents: [{\n            parts: [\n              {\n                text: `Analyze this waste/recycling item image and provide detailed information in JSON format including name, material, category, disposal instructions, binColor, tips, and confidence.`\n              },\n              {\n                inline_data: {\n                  mime_type: 'image/jpeg',\n                  data: base64String\n                }\n              }\n            ]\n          }]\n        })\n      });\n      if (!response.ok) throw new Error(`API error: ${response.status}`);\n      const data = await response.json();\n      if (!data.candidates || !data.candidates[0] || !data.candidates[0].content) throw new Error('Invalid API response');\n      const textContent = data.candidates[0].content.parts[0].text;\n      const jsonMatch = textContent.match(/\\{[\\s\\S]*\\}/);\n      if (!jsonMatch) throw new Error('No JSON found in response');\n      const result = JSON.parse(jsonMatch[0]);\n      return result;\n    } catch (error) {\n      setCameraError('Gemini API error: ' + error.message);\n      throw error;\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n\n  // Capture image and navigate to results\n  const captureImage = useCallback(async () => {\n    if (videoRef.current && canvasRef.current && videoReady) {\n      const video = videoRef.current;\n      if (video.videoWidth === 0 || video.videoHeight === 0 || video.readyState < 2) {\n        setCameraError('Camera not ready. Please wait.');\n        return;\n      }\n      setIsCapturing(true);\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n      const imageSrc = canvas.toDataURL('image/jpeg', 0.9);\n\n      try {\n        const result = await analyzeImageWithGemini(imageSrc);\n        onImageCapture && onImageCapture(result);\n        navigate('/results', { state: { result } });\n        stopCamera();\n      } catch (error) {\n        setCameraError('Failed to analyze image: ' + error.message);\n      } finally {\n        setIsCapturing(false);\n      }\n    } else {\n      setCameraError('Camera not ready. Please wait.');\n    }\n  }, [videoReady, navigate]);\n\n  // Analyze uploaded preview image\n  const handleAnalyze = async () => {\n    if (previewImage) {\n      setIsAnalyzing(true);\n      try {\n        const result = await analyzeImageWithGemini(previewImage);\n        onImageUpload && onImageUpload(result);\n        navigate('/results', { state: { result } });\n        setPreviewImage(null);\n      } catch (error) {\n        setCameraError('Failed to analyze image: ' + error.message);\n      } finally {\n        setIsAnalyzing(false);\n      }\n    }\n  };\n\n  // Handlers for file upload, drag-drop, startCamera, stopCamera, etc. (unchanged)\n\n  // Reset preview and errors\n  const resetPreview = () => {\n    setPreviewImage(null);\n    setCameraError(null);\n  };\n\n  return (\n    <div className=\"camera-input-wrapper\">\n      <canvas ref={canvasRef} style={{ display: 'none' }} />\n      <AnimatePresence mode=\"wait\">\n        {!isCameraActive && !previewImage && (\n          <motion.div\n            key=\"input-panel\"\n            className=\"camera-input-panel\"\n            initial={{ opacity: 0, y: 20, scale: 0.95 }}\n            animate={{ opacity: 1, y: 0, scale: 1 }}\n            exit={{ opacity: 0, y: -20, scale: 0.95 }}\n            transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n          >\n            {/* Your drag-drop, file upload, and camera start UI here */}\n            {/* Include drag-drop area with handlers */}\n            {/* Start camera button */}\n          </motion.div>\n        )}\n        {isCameraActive && (\n          <motion.div\n            key=\"camera-view\"\n            className=\"camera-view\"\n            initial={{ opacity: 0, scale: 0.9 }}\n            animate={{ opacity: 1, scale: 1 }}\n            exit={{ opacity: 0, scale: 0.9 }}\n            transition={{ type: \"spring\", stiffness: 200, damping: 25 }}\n          >\n            {/* Your video element, loading spinner, capture button */}\n          </motion.div>\n        )}\n        {previewImage && (\n          <motion.div\n            key=\"preview\"\n            className=\"image-preview\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: 20 }}\n          >\n            <img src={previewImage} alt=\"Preview\" className=\"preview-img\" />\n            <div className=\"preview-actions\">\n              <button className=\"btn btn-secondary\" onClick={resetPreview}>Cancel</button>\n              <button className=\"btn btn-primary\" onClick={handleAnalyze} disabled={isAnalyzing}>\n                {isAnalyzing ? 'Analyzing...' : 'Analyze'}\n              </button>\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport default CameraInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}